<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poho.stuup.dao.StudentMapper">
    <resultMap id="BaseResultMap" type="com.poho.stuup.model.Student">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="student_no" jdbcType="VARCHAR" property="studentNo"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="class_id" jdbcType="INTEGER" property="classId"/>
        <result column="id_card" jdbcType="VARCHAR" property="idCard"/>
        <result column="sex" jdbcType="INTEGER" property="sex"/>
        <result column="nation" jdbcType="VARCHAR" property="nation"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="is_valid" jdbcType="INTEGER" property="isValid"/>
        <result column="grade_id" jdbcType="INTEGER" property="gradeId"/>
        <result column="major_id" jdbcType="INTEGER" property="majorId"/>
        <result column="class_name" property="className"/>
        <result column="grade_name" property="gradeName"/>
        <result column="major_name" property="majorName"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, student_no, name, class_id, id_card, sex, nation, phone, status, is_valid, grade_id,
    major_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_student
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from t_student
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.poho.stuup.model.Student">
        insert into t_student (id, student_no, name,
                               class_id, id_card, sex,
                               nation, phone, status,
                               is_valid, grade_id, major_id)
        values (#{id,jdbcType=INTEGER}, #{studentNo,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
                #{classId,jdbcType=INTEGER}, #{idCard,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER},
                #{nation,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
                #{isValid,jdbcType=INTEGER}, #{gradeId,jdbcType=INTEGER}, #{majorId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.poho.stuup.model.Student">
        insert into t_student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="studentNo != null">
                student_no,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="classId != null">
                class_id,
            </if>
            <if test="idCard != null">
                id_card,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="nation != null">
                nation,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="isValid != null">
                is_valid,
            </if>
            <if test="gradeId != null">
                grade_id,
            </if>
            <if test="majorId != null">
                major_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="studentNo != null">
                #{studentNo,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="classId != null">
                #{classId,jdbcType=INTEGER},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="nation != null">
                #{nation,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="isValid != null">
                #{isValid,jdbcType=INTEGER},
            </if>
            <if test="gradeId != null">
                #{gradeId,jdbcType=INTEGER},
            </if>
            <if test="majorId != null">
                #{majorId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.poho.stuup.model.Student">
        update t_student
        <set>
            <if test="studentNo != null">
                student_no = #{studentNo,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="classId != null">
                class_id = #{classId,jdbcType=INTEGER},
            </if>
            <if test="idCard != null">
                id_card = #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="nation != null">
                nation = #{nation,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="isValid != null">
                is_valid = #{isValid,jdbcType=INTEGER},
            </if>
            <if test="gradeId != null">
                grade_id = #{gradeId,jdbcType=INTEGER},
            </if>
            <if test="majorId != null">
                major_id = #{majorId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.poho.stuup.model.Student">
        update t_student
        set student_no = #{studentNo,jdbcType=VARCHAR},
            name       = #{name,jdbcType=VARCHAR},
            class_id   = #{classId,jdbcType=INTEGER},
            id_card    = #{idCard,jdbcType=VARCHAR},
            sex        = #{sex,jdbcType=INTEGER},
            nation     = #{nation,jdbcType=VARCHAR},
            phone      = #{phone,jdbcType=VARCHAR},
            status     = #{status,jdbcType=INTEGER},
            is_valid   = #{isValid,jdbcType=INTEGER},
            grade_id   = #{gradeId,jdbcType=INTEGER},
            major_id   = #{majorId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByStudentNo" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List"/>
        from t_student
        where student_no = #{studentNo,jdbcType=VARCHAR}
        <if test="id != null and id != ''">
            AND id != #{id,jdbcType=INTEGER}
        </if>
        limit 1
    </select>
    <select id="findTotalStudentByClass" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        SELECT count(ts.id)
        FROM t_student as ts
        WHERE ts.is_valid = 1
          AND ts.status = 0
          and ts.class_id = #{_parameter,jdbcType=INTEGER}
    </select>
    <select id="findTotalStudentByCond" resultType="java.lang.Integer" parameterType="java.util.HashMap">
        SELECT COUNT(ts.id) FROM t_student AS ts
        LEFT JOIN t_class AS tc ON tc.id = ts.class_id
        LEFT JOIN t_major AS tm ON tm.oid = ts.major_id
        LEFT JOIN t_grade AS tg ON tg.oid = ts.grade_id
        WHERE 1=1
        <if test="key != null and key != ''">
            AND (ts.name LIKE CONCAT(CONCAT('%',#{key}),'%')
            OR tc.name LIKE CONCAT(CONCAT('%',#{key}),'%'))
        </if>
        <if test="gradeId != null and gradeId != ''">
            AND tg.oid =#{gradeId}
        </if>
        <if test="majorId != null and majorId != ''">
            AND tm.oid =#{majorId}
        </if>
    </select>
    <select id="findStudentPageResultByCond" parameterType="java.util.HashMap" resultMap="BaseResultMap">
        SELECT ts.*, tc.name AS class_name, tm.major_name, tg.grade_name
        FROM t_student AS ts
        LEFT JOIN t_class AS tc ON tc.id = ts.class_id
        LEFT JOIN t_major AS tm ON tm.oid = ts.major_id
        LEFT JOIN t_grade AS tg ON tg.oid = ts.grade_id
        WHERE 1=1
        <if test="key != null and key != ''">
            AND (ts.name LIKE CONCAT(CONCAT('%',#{key}),'%')
            OR tc.name LIKE CONCAT(CONCAT('%',#{key}),'%'))
        </if>
        <if test="gradeId != null and gradeId != ''">
            AND tg.oid =#{gradeId}
        </if>
        <if test="majorId != null and majorId != ''">
            AND tm.oid =#{majorId}
        </if>
        ORDER BY ts.id DESC
        limit #{start},#{length}
    </select>
    <select id="findAllStudent" parameterType="java.util.HashMap" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_student
    </select>

    <select id="findStudentId" resultType="Long">
        select id
        from t_student
        where student_no = #{studentNo}
    </select>

    <select id="selectIdList" resultType="Long">
        select id
        from t_student
    </select>

    <select id="getStudentForStudentNO" resultMap="BaseResultMap">
        select *
        from t_student
        where student_no = #{studentNo}
    </select>

    <select id="getAllStudentId" resultType="integer">
        select id
        from t_student
        where status = 1
          and is_valid = 1
    </select>
</mapper>