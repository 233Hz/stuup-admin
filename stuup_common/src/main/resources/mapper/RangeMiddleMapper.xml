<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poho.stuup.dao.RangeMiddleMapper">
  <resultMap id="BaseResultMap" type="com.poho.stuup.model.RangeMiddle">
    <id column="oid" jdbcType="BIGINT" property="oid" />
    <result column="leader_range_id" jdbcType="BIGINT" property="leaderRangeId" />
    <result column="assess_range_id" jdbcType="BIGINT" property="assessRangeId" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    oid, leader_range_id, assess_range_id, create_user, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_range_middle
    where oid = #{oid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_range_middle
    where oid = #{oid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.poho.stuup.model.RangeMiddle">
    insert into t_range_middle (oid, leader_range_id, assess_range_id, 
      create_user, create_time)
    values (#{oid,jdbcType=BIGINT}, #{leaderRangeId,jdbcType=BIGINT}, #{assessRangeId,jdbcType=BIGINT}, 
      #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.poho.stuup.model.RangeMiddle">
    insert into t_range_middle
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        oid,
      </if>
      <if test="leaderRangeId != null">
        leader_range_id,
      </if>
      <if test="assessRangeId != null">
        assess_range_id,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        #{oid,jdbcType=BIGINT},
      </if>
      <if test="leaderRangeId != null">
        #{leaderRangeId,jdbcType=BIGINT},
      </if>
      <if test="assessRangeId != null">
        #{assessRangeId,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.poho.stuup.model.RangeMiddle">
    update t_range_middle
    <set>
      <if test="leaderRangeId != null">
        leader_range_id = #{leaderRangeId,jdbcType=BIGINT},
      </if>
      <if test="assessRangeId != null">
        assess_range_id = #{assessRangeId,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where oid = #{oid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.poho.stuup.model.RangeMiddle">
    update t_range_middle
    set leader_range_id = #{leaderRangeId,jdbcType=BIGINT},
      assess_range_id = #{assessRangeId,jdbcType=BIGINT},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where oid = #{oid,jdbcType=BIGINT}
  </update>
  <select id="queryTotal" parameterType="java.util.HashMap" resultType="int">
    SELECT
      trm.*
    FROM
      t_range_middle AS trm
      LEFT JOIN t_assess_range AS tar ON tar.oid = trm.assess_range_id
    WHERE
      trm.leader_range_id = #{leaderRangeId,jdbcType=BIGINT}
      AND tar.year_id = #{yearId,jdbcType=BIGINT}
  </select>
  <select id="queryList" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    SELECT
      trm.*
    FROM
      t_range_middle AS trm
      LEFT JOIN t_assess_range AS tar ON tar.oid = trm.assess_range_id
    WHERE
      trm.leader_range_id = #{leaderRangeId,jdbcType=BIGINT}
      AND tar.year_id = #{yearId,jdbcType=BIGINT}
  </select>
  <select id="checkRangeMiddle" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    SELECT
      trm.*
    FROM
      t_range_middle AS trm
    WHERE
      trm.leader_range_id = #{leaderRangeId,jdbcType=BIGINT}
      AND trm.assess_range_id = #{assessRangeId,jdbcType=BIGINT}
    ORDER BY
      trm.oid DESC
    LIMIT 1
  </select>
  <delete id="deleteBatch">
    delete from t_range_middle
    where oid in
    <foreach close=")" collection="array" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </delete>
  <select id="queryRangeMiddleIds" parameterType="java.util.HashMap" resultType="Long">
    SELECT
      trm.assess_range_id
    FROM
      t_range_middle AS trm
      LEFT JOIN t_assess_range AS tar ON tar.oid = trm.assess_range_id
    WHERE
      trm.leader_range_id = #{leaderRangeId,jdbcType=BIGINT}
      AND tar.year_id = #{yearId,jdbcType=BIGINT}
  </select>
  <delete id="clearLeaderRangeMiddle" parameterType="java.util.HashMap">
    delete from t_range_middle
    where leader_range_id = #{leaderRangeId,jdbcType=BIGINT}
  </delete>
</mapper>