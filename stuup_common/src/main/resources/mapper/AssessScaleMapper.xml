<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poho.stuup.dao.AssessScaleMapper">
  <resultMap id="BaseResultMap" type="com.poho.stuup.model.AssessScale">
    <id column="oid" jdbcType="BIGINT" property="oid" />
    <result column="year_id" jdbcType="BIGINT" property="yearId" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="a_min" jdbcType="INTEGER" property="aMin" />
    <result column="a_max" jdbcType="INTEGER" property="aMax" />
    <result column="b_min" jdbcType="INTEGER" property="bMin" />
    <result column="b_max" jdbcType="INTEGER" property="bMax" />
    <result column="c_min" jdbcType="INTEGER" property="cMin" />
    <result column="c_max" jdbcType="INTEGER" property="cMax" />
    <result column="d_min" jdbcType="INTEGER" property="dMin" />
    <result column="d_max" jdbcType="INTEGER" property="dMax" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="dept_name" property="deptName" />
    <result column="year_name" property="yearName" />
  </resultMap>
  <sql id="Base_Column_List">
    oid, year_id, dept_id, a_min, a_max, b_min, b_max, c_min, c_max, d_min, d_max, create_user, 
    create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_assess_scale
    where oid = #{oid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_assess_scale
    where oid = #{oid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.poho.stuup.model.AssessScale">
    insert into t_assess_scale (oid, year_id, dept_id, 
      a_min, a_max, b_min, b_max, 
      c_min, c_max, d_min, d_max, 
      create_user, create_time)
    values (#{oid,jdbcType=BIGINT}, #{yearId,jdbcType=BIGINT}, #{deptId,jdbcType=BIGINT}, 
      #{aMin,jdbcType=INTEGER}, #{aMax,jdbcType=INTEGER}, #{bMin,jdbcType=INTEGER}, #{bMax,jdbcType=INTEGER}, 
      #{cMin,jdbcType=INTEGER}, #{cMax,jdbcType=INTEGER}, #{dMin,jdbcType=INTEGER}, #{dMax,jdbcType=INTEGER}, 
      #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.poho.stuup.model.AssessScale">
    insert into t_assess_scale
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        oid,
      </if>
      <if test="yearId != null">
        year_id,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="aMin != null">
        a_min,
      </if>
      <if test="aMax != null">
        a_max,
      </if>
      <if test="bMin != null">
        b_min,
      </if>
      <if test="bMax != null">
        b_max,
      </if>
      <if test="cMin != null">
        c_min,
      </if>
      <if test="cMax != null">
        c_max,
      </if>
      <if test="dMin != null">
        d_min,
      </if>
      <if test="dMax != null">
        d_max,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        #{oid,jdbcType=BIGINT},
      </if>
      <if test="yearId != null">
        #{yearId,jdbcType=BIGINT},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="aMin != null">
        #{aMin,jdbcType=INTEGER},
      </if>
      <if test="aMax != null">
        #{aMax,jdbcType=INTEGER},
      </if>
      <if test="bMin != null">
        #{bMin,jdbcType=INTEGER},
      </if>
      <if test="bMax != null">
        #{bMax,jdbcType=INTEGER},
      </if>
      <if test="cMin != null">
        #{cMin,jdbcType=INTEGER},
      </if>
      <if test="cMax != null">
        #{cMax,jdbcType=INTEGER},
      </if>
      <if test="dMin != null">
        #{dMin,jdbcType=INTEGER},
      </if>
      <if test="dMax != null">
        #{dMax,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.poho.stuup.model.AssessScale">
    update t_assess_scale
    <set>
      <if test="yearId != null">
        year_id = #{yearId,jdbcType=BIGINT},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=BIGINT},
      </if>
      <if test="aMin != null">
        a_min = #{aMin,jdbcType=INTEGER},
      </if>
      <if test="aMax != null">
        a_max = #{aMax,jdbcType=INTEGER},
      </if>
      <if test="bMin != null">
        b_min = #{bMin,jdbcType=INTEGER},
      </if>
      <if test="bMax != null">
        b_max = #{bMax,jdbcType=INTEGER},
      </if>
      <if test="cMin != null">
        c_min = #{cMin,jdbcType=INTEGER},
      </if>
      <if test="cMax != null">
        c_max = #{cMax,jdbcType=INTEGER},
      </if>
      <if test="dMin != null">
        d_min = #{dMin,jdbcType=INTEGER},
      </if>
      <if test="dMax != null">
        d_max = #{dMax,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where oid = #{oid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.poho.stuup.model.AssessScale">
    update t_assess_scale
    set year_id = #{yearId,jdbcType=BIGINT},
      dept_id = #{deptId,jdbcType=BIGINT},
      a_min = #{aMin,jdbcType=INTEGER},
      a_max = #{aMax,jdbcType=INTEGER},
      b_min = #{bMin,jdbcType=INTEGER},
      b_max = #{bMax,jdbcType=INTEGER},
      c_min = #{cMin,jdbcType=INTEGER},
      c_max = #{cMax,jdbcType=INTEGER},
      d_min = #{dMin,jdbcType=INTEGER},
      d_max = #{dMax,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where oid = #{oid,jdbcType=BIGINT}
  </update>
  <select id="queryTotal" parameterType="java.util.HashMap" resultType="int">
    select
    count(tas.oid)
    from t_assess_scale as tas
    left join t_dept as td on td.oid = tas.dept_id
    where 1=1
    <if test="yearId != null">
      AND tas.year_id = #{yearId,jdbcType=BIGINT}
    </if>
    <if test="key != null and key != ''">
      AND td.dept_name LIKE CONCAT(CONCAT('%',#{key}),'%')
    </if>
  </select>
  <select id="queryList" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    select
    tas.*,
    td.dept_name as dept_name,
    ty.year_name
    from t_assess_scale as tas
    left join t_dept as td on td.oid = tas.dept_id
    left join t_year as ty on ty.oid = tas.year_id
    where 1=1
    <if test="yearId != null">
      AND tas.year_id = #{yearId,jdbcType=BIGINT}
    </if>
    <if test="key != null and key != ''">
      AND td.dept_name LIKE CONCAT(CONCAT('%',#{key}),'%')
    </if>
    order by tas.oid desc
    <if test="start != null and length != null">
      limit #{start},#{length}
    </if>
  </select>
  <select id="checkAssessScale" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    SELECT
        tas.*
    FROM
        t_assess_scale AS tas
    WHERE
        tas.dept_id = #{deptId,jdbcType=BIGINT}
    <if test="yearId != null">
      AND tas.year_id = #{yearId,jdbcType=BIGINT}
    </if>
    ORDER BY
        tas.oid DESC
    LIMIT 1
  </select>
  <delete id="deleteBatch">
    delete from t_assess_scale
    where oid in
    <foreach collection="array" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </delete>
</mapper>