<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.td//DTD Mapper 3.0//EN" "http://mybatis.td/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poho.stuup.dao.ScoreDetailMapper">
  <resultMap id="BaseResultMap" type="com.poho.stuup.model.ScoreDetail">
    <id column="oid" jdbcType="BIGINT" property="oid" />
    <result column="stu_id" jdbcType="INTEGER" property="stuId" />
    <result column="score_type" jdbcType="INTEGER" property="scoreType" />
    <result column="rule_class" jdbcType="VARCHAR" property="ruleClass" />
    <result column="record_id" jdbcType="INTEGER" property="recordId" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="status" jdbcType="INTEGER" property="status" />

  </resultMap>
  <sql id="Base_Column_List">
    oid, stu_id, score_type, rule_class, record_id, description, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_score_detail
    where oid = #{oid,jdbcType=BIGINT}
  </select>

  <select id="selectTotal"  resultType="int">
    select
    count(*)
    from t_score_detail as td
    left join t_student stu on td.stu_id = stu.id
    left join t_class cl on stu.class_id = cl.id
    where 1=1
    <if test="searchDTO.stuNo != null and searchDTO.stuNo != ''">
      AND stu.student_no LIKE CONCAT(CONCAT('%',#{searchDTO.stuNo}),'%')
    </if>
    <if test="searchDTO.stuName != null and searchDTO.stuName != ''">
      AND stu.name LIKE CONCAT(CONCAT('%',#{searchDTO.stuName}),'%')
    </if>
  </select>

  <select id="selectList"  resultType="com.poho.stuup.model.dto.ScoreDetailDTO">
    select
    td.oid, td.stu_id as stuId,td.score,td.score_type as scoreType,td.rule_class as ruleClass
    , td.record_id as recordId, td.description, td.create_time as createTime, td.status
    ,stu.student_no as stuNo ,stu.name as stuName, stu.class_id as classId
    ,cl.grade_id as gradeId, cl.name as className
    from t_score_detail as td
    left join t_student stu on td.stu_id = stu.id
    left join t_class cl on stu.class_id = cl.id
    where 1=1
    <if test="searchDTO.stuNo != null and searchDTO.stuNo != ''">
      AND stu.student_no LIKE CONCAT(CONCAT('%',#{searchDTO.stuNo}),'%')
    </if>
    <if test="searchDTO.stuName != null and searchDTO.stuName != ''">
      AND stu.name LIKE CONCAT(CONCAT('%',#{searchDTO.stuName}),'%')
    </if>
    order by td.oid desc
    <if test="pageData != null ">
      limit #{pageData.start},#{pageData.size}
    </if>
  </select>
  <select id="selectStuScoreDetailList"  resultType="com.poho.stuup.model.dto.ScoreDetailDTO">
    select
    td.oid, td.stu_id as stuId,td.score,td.score_type as scoreType,td.rule_class as ruleClass
    , td.record_id as recordId, td.description, td.create_time as createTime, td.status
    ,stu.student_no as stuNo ,stu.name as stuName, stu.class_id as classId
    ,cl.grade_id as gradeId, cl.name as className
    from t_score_detail as td
    left join t_student stu on td.stu_id = stu.id
    left join t_class cl on stu.class_id = cl.id
    where 1=1
    <if test="searchDTO.stuId != null ">
      AND stu.id = #{searchDTO.stuId}
    </if>
    <if test="searchDTO.stuNo != null and searchDTO.stuNo != ''">
      AND stu.student_no =  #{searchDTO.stuNo}
    </if>
    order by td.oid desc
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_score_detail
    where oid = #{oid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.poho.stuup.model.ScoreDetail">
    insert into t_score_detail (oid, stu_id, score_type, rule_class, record_id, description)
    values (#{oid,jdbcType=BIGINT}, #{stuId,jdbcType=INTEGER}, #{scoreType,jdbcType=INTEGER}
    , #{ruleClass,jdbcType=VARCHAR}
    , #{recordId,jdbcType=INTEGER}
    , #{description,jdbcType=VARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.poho.stuup.model.ScoreDetail">
    insert into t_score_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        oid,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="scoreType != null">
        score_type,
      </if>
      <if test="ruleClass != null">
        rule_class,
      </if>
      <if test="recordId != null">
        record_id,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        #{oid,jdbcType=BIGINT},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="scoreType != null">
        #{scoreType,jdbcType=INTEGER},
      </if>
      <if test="ruleClass != null">
        #{ruleClass,jdbcType=VARCHAR},
      </if>
      <if test="recordId != null">
        #{recordId,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.poho.stuup.model.ScoreDetail">
    update t_score_detail
    <set>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=INTEGER},
      </if>
      <if test="scoreType != null">
        score_type = #{scoreType,jdbcType=INTEGER},
      </if>
      <if test="ruleClass != null">
        rule_class = #{ruleClass,jdbcType=VARCHAR},
      </if>
      <if test="recordId != null">
        record_id = #{recordId,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>

    </set>
    where oid = #{oid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.poho.stuup.model.ScoreDetail">
    update t_score_detail
    set
    stu_id = #{stuId,jdbcType=INTEGER},
    score_type = #{scoreType,jdbcType=INTEGER},
    rule_class = #{ruleClass,jdbcType=VARCHAR},
    record_id = #{recordId,jdbcType=INTEGER},
    description = #{description,jdbcType=VARCHAR},
    status = #{status,jdbcType=INTEGER}
    where oid = #{oid,jdbcType=BIGINT}
  </update>
  <select id="queryTotal" parameterType="java.util.HashMap" resultType="int">
    select
    count(td.oid)
    from t_score_detail as td
    where 1=1
  </select>
  <select id="queryList" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    select
    td.*
    from t_score_detail as td
    where 1=1
    order by td.oid desc
    <if test="start != null and length != null">
      limit #{start},#{length}
    </if>
  </select>
  <delete id="deleteBatch">
    delete from t_score_detail
    where oid in
    <foreach collection="array" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </delete>
</mapper>