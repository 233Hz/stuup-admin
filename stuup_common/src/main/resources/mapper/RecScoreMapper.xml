<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poho.stuup.dao.RecScoreMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.poho.stuup.model.RecScore">
        <id column="id" property="id"/>
        <result column="student_id" property="studentId"/>
        <result column="grow_id" property="growId"/>
        <result column="score" property="score"/>
        <result column="year_id" property="yearId"/>
        <result column="semester_id" property="semesterId"/>
        <result column="state" property="state"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <resultMap id="RecScoreVOMap" type="com.poho.stuup.model.vo.RecScoreVO">
        <id column="id" property="id"/>
        <result column="year_name" property="yearName"/>
        <result column="first_level_name" property="firstLevelName"/>
        <result column="second_level_name" property="secondLevelName"/>
        <result column="three_level_name" property="threeLevelName"/>
        <result column="grow_name" property="growName"/>
        <result column="grade_name" property="gradeName"/>
        <result column="class_name" property="className"/>
        <result column="student_name" property="studentName"/>
        <result column="student_no" property="studentNo"/>
        <result column="id_card" property="idCard"/>
        <result column="student_id" property="studentId"/>
        <result column="score" property="score"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <select id="getRecScorePage" resultMap="RecScoreVOMap">
        select
        trs.id,
        y.year_name,
        first.name as first_level_name,
        second.name as second_level_name,
        three.name as three_level_name,
        gi.name as grow_name,
        g.grade_name,
        c.name as class_name,
        s.name as student_name,
        s.student_no,
        s.id_card,
        trs.student_id,
        trs.score,
        trs.create_time
        from t_rec_score trs
        left join t_growth_item gi on gi.id = trs.grow_id
        left join t_growth first on first.id = gi.first_level_id
        left join t_growth second on second.id = gi.second_level_id
        left join t_growth three on three.id = gi.three_level_id
        left join t_student s on s.id = trs.student_id
        left join t_year y on y.oid = trs.year_id
        left join t_grade g on g.oid = s.grade_id
        left join t_class c on c.id = s.class_id
        <where>
            <if test="query.yearId != null and query.yearId != ''">
                and y.oid = #{query.yearId}
            </if>
            <if test="query.firstLevelId != null and query.firstLevelId != ''">
                and gi.first_level_id = #{query.firstLevelId}
            </if>
            <if test="query.secondLevelId != null and query.secondLevelId != ''">
                and gi.second_level_id = #{query.secondLevelId}
            </if>
            <if test="query.threeLevelId != null and query.threeLevelId != ''">
                and gi.three_level_id = #{query.threeLevelId}
            </if>
            <if test="query.growName != null and query.growName != ''">
                and gi.name like concat('%',#{query.growName},'%')
            </if>
            <if test="query.gradeId != null and query.gradeId != ''">
                and g.oid = #{query.gradeId}
            </if>
            <if test="query.className != null and query.className != ''">
                and c.name like concat('%',#{query.className},'%')
            </if>
            <if test="query.studentName != null and query.studentName != ''">
                and s.name like concat('%',#{query.studentName},'%')
            </if>
            <if test="query.studentNo != null and query.studentNo != ''">
                and s.student_no like concat('%',#{query.studentNo},'%')
            </if>
            <if test="query.startTime != null and query.endTime != null and query.startTime != '' and query.endTime != '' ">
                and trs.create_time between #{query.startTime} and #{query.endTime}
            </if>
        </where>
        order by trs.create_time
    </select>

    <resultMap id="StudentRecScoreVOMap" type="com.poho.stuup.model.vo.StudentRecScoreVO">
        <id column="id" property="id"/>
        <result column="score" property="score"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <select id="pageStudentRecScore" resultMap="StudentRecScoreVOMap">
        select
        trs.id,
        y.year_name,
        first.name as first_level_name,
        second.name as second_level_name,
        three.name as three_level_name,
        gi.name as grow_name,
        trs.score,
        trs.create_time
        from t_rec_score trs
        left join t_growth_item gi on gi.id = trs.grow_id
        left join t_growth first on first.id = gi.first_level_id
        left join t_growth second on second.id = gi.second_level_id
        left join t_growth three on three.id = gi.three_level_id
        left join t_year y on y.oid = trs.year_id
        <where>
            trs.student_id = #{studentId}
            <if test="query.yearId != null and query.yearId != ''">
                and y.oid = #{query.yearId}
            </if>
            <if test="query.firstLevelId != null and query.firstLevelId != ''">
                and gi.first_level_id = #{query.firstLevelId}
            </if>
            <if test="query.secondLevelId != null and query.secondLevelId != ''">
                and gi.second_level_id = #{query.secondLevelId}
            </if>
            <if test="query.threeLevelId != null and query.threeLevelId != ''">
                and gi.three_level_id = #{query.threeLevelId}
            </if>
            <if test="query.growName != null and query.growName != ''">
                and gi.name like concat('%',#{query.growName},'%')
            </if>
            <if test="query.startTime != null and query.endTime != null and query.startTime != '' and query.endTime != '' ">
                and trs.create_time between #{query.startTime} and #{query.endTime}
            </if>
        </where>
        order by trs.create_time desc
    </select>

    <select id="findTimePeriodRecord" resultMap="BaseResultMap">
        select *
        from t_rec_score
        where create_time between #{startTime} and #{endTime}
    </select>

    <select id="findTimePeriodRecordForGrow" resultMap="BaseResultMap">
        select *
        from t_rec_score
        where grow_id = #{growId}
          and create_time between #{startTime} and #{endTime}
    </select>

    <resultMap id="RecScoreYearRankDTOMap" type="com.poho.stuup.model.dto.RecScoreYearRankDTO">
        <result column="student_id" property="studentId"/>
        <result column="score" property="score"/>
        <result column="student_name" property="studentName"/>
        <result column="class_id" property="classId"/>
        <result column="grade_id" property="gradeId"/>
        <result column="major_id" property="majorId"/>
    </resultMap>

    <select id="findRecScoreForYear" resultMap="RecScoreYearRankDTOMap">
        select trs.student_id,
               trs.score,
               s.name as student_name,
               s.student_no,
               s.class_id,
               s.grade_id,
               s.major_id
        from t_rec_score trs
                 left join t_student s on s.id = trs.student_id
        where year_id = #{yearId}
    </select>

    <resultMap id="ClassRankVOMap" type="com.poho.stuup.model.vo.ClassRankVO">
        <result column="class_id" property="classId"/>
        <result column="score" property="score"/>
    </resultMap>

    <select id="getClassRank" resultMap="ClassRankVOMap">
        select s.class_id,
               trs.score
        from t_rec_score trs
                 left join t_student s on s.id = trs.student_id
        where year_id = #{yearId}
    </select>

    <resultMap id="MajorRankVOMap" type="com.poho.stuup.model.vo.MajorRankVO">
        <result column="major_id" property="majorId"/>
        <result column="score" property="score"/>
    </resultMap>

    <select id="getMajorRank" resultMap="MajorRankVOMap">
        select s.major_id,
               trs.score
        from t_rec_score trs
                 left join t_student s on s.id = trs.student_id
        where year_id = #{yearId}
    </select>

    <resultMap id="FacultyRankVOMap" type="com.poho.stuup.model.vo.FacultyRankVO">
        <result column="class_id" property="classId"/>
        <result column="score" property="score"/>
    </resultMap>

    <select id="getFacultyRank" resultMap="FacultyRankVOMap">
        select s.class_id,
               trs.score
        from t_rec_score trs
                 left join t_student s on s.id = trs.student_id
        where year_id = #{yearId}
    </select>

    <resultMap id="WholeSchoolTop10VOMap" type="com.poho.stuup.model.vo.WholeSchoolTop10VO">
        <result column="student_name" property="studentName"/>
        <result column="class_name" property="className"/>
        <result column="class_teacher" property="classTeacher"/>
        <result column="ranking" property="ranking"/>
        <result column="score" property="score"/>
    </resultMap>

    <select id="findWholeSchoolTop10Ranking" resultMap="WholeSchoolTop10VOMap">
        select s.name         as student_name,
               c.name         as class_name,
               t.name         as class_teacher,
               sum(trs.score) as score
        from t_rec_score trs
                 left join t_student s on s.id = trs.student_id
                 left join t_class c on c.id = s.class_id
                 left join t_teacher t on t.id = c.teacher_id
        where trs.year_id = #{yearId}
        group by trs.student_id
        order by score desc
        limit 10
    </select>

    <resultMap id="WholeClassTop10VOMap" type="com.poho.stuup.model.vo.WholeClassTop10VO">
        <result column="class_name" property="className"/>
        <result column="class_teacher" property="classTeacher"/>
        <result column="ranking" property="ranking"/>
        <result column="score" property="score"/>
    </resultMap>

    <select id="findWholeClassTop10Ranking" resultMap="WholeClassTop10VOMap">
        select c.name         as class_name,
               t.name         as class_teacher,
               sum(trs.score) as score
        from t_rec_score trs
                 left join t_student s on s.id = trs.student_id
                 left join t_class c on c.id = s.class_id
                 left join t_teacher t on t.id = c.teacher_id
        where trs.year_id = #{yearId}
        group by s.class_id
        order by score desc
        limit 10
    </select>

</mapper>
