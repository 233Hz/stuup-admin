<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poho.stuup.dao.RoleMapper">
    <resultMap id="BaseResultMap" type="com.poho.stuup.model.Role">
        <id column="oid" jdbcType="BIGINT" property="oid"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="role_desc" jdbcType="VARCHAR" property="roleDesc"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_user" jdbcType="BIGINT" property="createUser"/>
    </resultMap>
    <sql id="Base_Column_List">
        oid, role_name, role_desc, create_time, create_user
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_role
        where oid = #{oid,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from t_role
        where oid = #{oid,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.poho.stuup.model.Role">
        insert into t_role (oid, role_name, role_desc,
                            create_time, create_user)
        values (#{oid,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" parameterType="com.poho.stuup.model.Role">
        insert into t_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="oid != null">
                oid,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="roleDesc != null">
                role_desc,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="oid != null">
                #{oid,jdbcType=BIGINT},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDesc != null">
                #{roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.poho.stuup.model.Role">
        update t_role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDesc != null">
                role_desc = #{roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=BIGINT},
            </if>
        </set>
        where oid = #{oid,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.poho.stuup.model.Role">
        update t_role
        set role_name   = #{roleName,jdbcType=VARCHAR},
            role_desc   = #{roleDesc,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            create_user = #{createUser,jdbcType=BIGINT}
        where oid = #{oid,jdbcType=BIGINT}
    </update>
    <select id="queryTotal" parameterType="java.util.HashMap" resultType="int">
        select
        count(tr.oid)
        from t_role as tr
        where 1=1
        <if test="key != null and key != ''">
            AND tr.role_name LIKE CONCAT(CONCAT('%',#{key}),'%')
        </if>
    </select>
    <select id="queryList" parameterType="java.util.HashMap" resultMap="BaseResultMap">
        select
        tr.*
        from t_role as tr
        where 1=1
        <if test="key != null and key != ''">
            AND tr.role_name LIKE CONCAT(CONCAT('%',#{key}),'%')
        </if>
        order by tr.create_time desc
        <if test="start != null and length != null">
            limit #{start},#{length}
        </if>
    </select>
    <select id="checkRole" parameterType="java.util.HashMap" resultMap="BaseResultMap">
        SELECT
        tr.*
        FROM
        t_role AS tr
        WHERE
        1=1
        <if test="roleName != null">
            AND tr.role_name = #{roleName,jdbcType=VARCHAR}
        </if>
        <if test="oid != null">
            AND tr.oid != #{oid,jdbcType=BIGINT}
        </if>
        ORDER BY
        tr.oid DESC
        LIMIT 1
    </select>
    <delete id="deleteBatch">
        delete from t_role
        where oid in
        <foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <select id="queryRoleNames" resultType="java.lang.String">
        select role_name from t_role
        where oid in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="findRoleIdByName" resultType="Long">
        select oid
        from t_role
        where role_name = #{roleName}
    </select>
</mapper>