<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.td//DTD Mapper 3.0//EN" "http://mybatis.td/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poho.stuup.dao.ScoreMapper">
  <resultMap id="BaseResultMap" type="com.poho.stuup.model.Score">
    <id column="oid" jdbcType="BIGINT" property="oid" />
    <result column="stu_id" jdbcType="INTEGER" property="stuId" />
    <result column="total_score" jdbcType="INTEGER" property="totalScore" />
    <result column="curr_grade_score" jdbcType="INTEGER" property="currGradeScore" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    oid, stu_id, total_score, curr_grade_score, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_score
    where oid = #{oid,jdbcType=BIGINT}
  </select>

  <select id="selectTotal"  resultType="int">
    select
    count(*)
    from t_score as ts
    left join t_student stu on ts.stu_id = stu.id
    left join t_class cl on stu.class_id = cl.id
    where 1=1
    <if test="searchDTO.stuNo != null and searchDTO.stuNo != ''">
      AND stu.student_no LIKE CONCAT(CONCAT('%',#{searchDTO.stuNo}),'%')
    </if>
    <if test="searchDTO.stuName != null and searchDTO.stuName != ''">
      AND stu.name LIKE CONCAT(CONCAT('%',#{searchDTO.stuName}),'%')
    </if>
  </select>

  <select id="selectList"  resultType="com.poho.stuup.model.dto.ScoreDTO">
    select
    ts.oid, ts.stu_id as stuId,ts.total_score as totalScore, ts.curr_grade_score as currGradeScore, ts.status
    ,stu.student_no as stuNo ,stu.name as stuName, stu.class_id as classId
    ,cl.grade_id as gradeId, cl.name as className
    from t_score as ts
    left join t_student stu on ts.stu_id = stu.id
    left join t_class cl on stu.class_id = cl.id
    where 1=1
    <if test="searchDTO.stuNo != null and searchDTO.stuNo != ''">
      AND stu.student_no LIKE CONCAT(CONCAT('%',#{searchDTO.stuNo}),'%')
    </if>
    <if test="searchDTO.stuName != null and searchDTO.stuName != ''">
      AND stu.name LIKE CONCAT(CONCAT('%',#{searchDTO.stuName}),'%')
    </if>
    order by ts.oid desc
    <if test="pageData != null ">
      limit #{pageData.start},#{pageData.size}
    </if>
  </select>

  <select id="selectStuScoreTopList"  resultType="com.poho.stuup.model.dto.ScoreDTO">
    select
    ts.oid, ts.stu_id as stuId,ts.total_score as totalScore, ts.curr_grade_score as currGradeScore, ts.status
    ,stu.student_no as stuNo ,stu.name as stuName, stu.class_id as classId
    ,cl.grade_id as gradeId, cl.name as className
    from t_score as ts
    left join t_student stu on ts.stu_id = stu.id
    left join t_class cl on stu.class_id = cl.id
    where 1=1
    <if test="searchDTO.gradeId != null ">
      AND stu.grade_id = #{searchDTO.gradeId}
    </if>
    <if test="searchDTO.majorId != null ">
      AND stu.major_id = #{searchDTO.majorId}
    </if>
    <if test="searchDTO.classId != null ">
      AND stu.class_id = #{searchDTO.classId}
    </if>
    order by ts.total_score desc
      limit #{searchDTO.top}
  </select>

  <select id="selectStuScore" resultType="com.poho.stuup.model.dto.ScoreDTO">
    select
    ts.oid, ts.stu_id as stuId,ts.total_score as totalScore, ts.curr_grade_score as currGradeScore, ts.status
    ,stu.student_no as stuNo ,stu.name as stuName, stu.class_id as classId
    ,cl.grade_id as gradeId, cl.name as className
    from t_score as ts
    left join t_student stu on ts.stu_id = stu.id
    left join t_class cl on stu.class_id = cl.id
    where 1=1
    <if test="searchDTO.stuId != null">
      AND stu.id = #{searchDTO.stuId}
    </if>
    <if test="searchDTO.stuNo != null and searchDTO.stuNo != ''">
      AND stu.student_no = #{searchDTO.stuNo}
    </if>
    order by ts.oid desc
    limit 1
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_score
    where oid = #{oid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.poho.stuup.model.Score">
    insert into t_score oid, stu_id, total_score, curr_grade_score)
    values (#{oid,jdbcType=BIGINT},#{stuId,jdbcType=INTEGER}
    , #{totalScore,jdbcType=INTEGER}, #{currGradeScore,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.poho.stuup.model.Score">
    insert into t_score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        oid,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="totalScore != null">
        total_score,
      </if>
      <if test="currGradeScore != null">
        curr_grade_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        #{oid,jdbcType=BIGINT},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="totalScore != null">
        #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="currGradeScore != null">
        #{currGradeScore,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.poho.stuup.model.Score">
    update t_score
    <set>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=INTEGER},
      </if>
      <if test="totalScore != null">
        total_score = #{totalScore,jdbcType=INTEGER},
      </if>
      <if test="currGradeScore != null">
        curr_grade_score = #{currGradeScore,jdbcType=INTEGER},
      </if>
    </set>
    where oid = #{oid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.poho.stuup.model.Score">
    update t_score
    set stu_id = #{stuId,jdbcType=INTEGER},
    total_score = #{totalScore,jdbcType=INTEGER},
    curr_grade_score = #{currGradeScore,jdbcType=INTEGER},
    status = #{status,jdbcType=INTEGER},
    where oid = #{oid,jdbcType=BIGINT}
  </update>
  <select id="queryTotal" parameterType="java.util.HashMap" resultType="int">
    select
    count(td.oid)
    from t_score as td
    where 1=1
  </select>
  <select id="queryList" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    select
    td.*
    from t_score as td
    where 1=1

    order by td.oid desc
    <if test="start != null and length != null">
      limit #{start},#{length}
    </if>
  </select>
  <delete id="deleteBatch">
    delete from t_score
    where oid in
    <foreach collection="array" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </delete>
</mapper>